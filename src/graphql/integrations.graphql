mutation IntegrateGitHub($code: String!, $state: String!) {
  IntegrateGitHub(code: $code, state: $state) {
    success
  }
}

mutation IntegrateHashnode($accessToken: String!, $username: String!) {
  IntegrateHashnode(accessToken: $accessToken, username: $username) {
    success
  }
}

mutation IntegrateDEV($accessToken: String!) {
  IntegrateDEV(accessToken: $accessToken) {
    success
  }
}

query MyIntegrations {
  MyIntegrations {
    integrations
  }
}

mutation DeleteIntegration($id: uuid!, $integration: IntegrationEnum!) {
  DeleteIntegration(id: $id, integration: $integration) {
    success
  }
}

mutation UpdateGitHubIntegration(
  $branch: String!
  $repository: String!
  $id: uuid!
) {
  update_GitHubIntegration_by_pk(
    _set: { branch: $branch, repository: $repository }
    pk_columns: { id: $id }
  ) {
    branch
    repository
  }
}

mutation PublishBlogs($flickId: uuid!, $platforms: [PublishablePlatformEnum]!) {
  PublishBlogs(flickId: $flickId, platforms: $platforms) {
    success
  }
}
