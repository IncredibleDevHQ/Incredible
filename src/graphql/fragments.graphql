fragment FlickFragment on Fragment {
  configuration
  description
  flickId
  id
  name
  order
  type
  producedLink
}

fragment StudioFragment on Fragment {
  ...FlickFragment
  flick {
    ...BaseFlick
  }
}

query GetFragmentById($id: uuid!, $sub: String!) {
  Fragment(
    where: {
      _and: {
        id: { _eq: $id }
        flick: { participants: { userSub: { _eq: $sub } } }
      }
    }
  ) {
    ...StudioFragment
  }
}

query fragmentRole($fragmentId: uuid = "", $sub: String = "") {
  Participant(
    where: {
      _and: {
        fragments: {
          fragmentId: { _eq: $fragmentId }
          participant: { userSub: { _eq: $sub } }
        }
      }
    }
  ) {
    role
  }
}

mutation AddFragmentToFlick(
  $type: FRAGMENT_TYPE_ENUM_enum!
  $order: Int!
  $name: String!
  $flickId: uuid!
  $description: String!
) {
  insert_Fragment_one(
    object: {
      name: $name
      order: $order
      type: $type
      flickId: $flickId
      description: $description
    }
  ) {
    createdAt
  }
}

mutation MarkFragmentCompleted($id: uuid!, $producedLink: String!) {
  update_Fragment_by_pk(
    pk_columns: { id: $id }
    _set: { status: Completed, producedLink: $producedLink }
  ) {
    updatedAt
  }
}

mutation InsertParticipantToFragment(
  $participantId: uuid!
  $fragmentId: uuid!
) {
  InviteParticipantToFragment(
    fragmentId: $fragmentId
    participantId: $participantId
  ) {
    createdAt
  }
}

query FragmentParticipants($fragmentId: uuid = "") {
  Fragment_Participant(where: { fragmentId: { _eq: $fragmentId } }) {
    participantId
  }
}
