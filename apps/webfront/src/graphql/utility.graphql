mutation UploadFile($key: String!) {
	UploadFile(key: $key) {
		success
		url
	}
}

query GetImagesFromUnsplash($query: String!) {
	SearchUnsplash(query: $query) {
		results
	}
}

mutation GetRTCToken($fragmentId: uuid!, $flickId: uuid!) {
	RTCToken(fragmentId: $fragmentId, flickId: $flickId) {
		token
		success
	}
}

fragment MyNotification on Notifications {
	id
	type
	isRead
	createdAt
	message
	meta
	metaType
	sender {
		sub
		picture
		displayName
		username
	}
}

query GetMyNotifications($limit: Int = 15) {
	Notifications(order_by: { createdAt: desc }, limit: $limit) {
		...MyNotification
	}
}

query GetAllMyNotifications($limit: Int = 25, $offset: Int = 0) {
	Notifications(order_by: { createdAt: desc }, limit: $limit, offset: $offset) {
		...MyNotification
	}
}

subscription MyUnreadNotificationsCount {
	Notifications_aggregate(where: { isRead: { _eq: false } }) {
		aggregate {
			count
		}
	}
}

mutation MarkNotificationAsRead($id: uuid!) {
	update_Notifications_by_pk(pk_columns: { id: $id }, _set: { isRead: true }) {
		id
	}
}

mutation MarkAllNotificationsAsRead {
	update_Notifications(
		where: { isRead: { _eq: false } }
		_set: { isRead: true }
	) {
		affected_rows
	}
}

mutation AcceptCollaboration($notificationId: String!, $inviteId: String!) {
	RespondToCollaboration(
		inviteId: $inviteId
		notificationId: $notificationId
		status: Accepted
	) {
		success
	}
}
